"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 3.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import jwcrypto.jwk as jwk
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-m+in6i72e86!5+xf&((%w@&wp#_$i%$*45v6v!a7*8u2kp7-oz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    #Custom Apps
    'authapis',
    

    #Third party apps
    'rest_framework',
    'drf_yasg',
    'corsheaders',
    
]

# Added bearer settings
SWAGGER_SETTINGS = {
    'USE_SESSION_AUTH': False,
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'authapis.middleware.CustomMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/auth/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

JWT_PUBLIC_KEY = jwk.JWK.from_json('{"e":"AQAB","kty":"RSA","n":"95VccdRen5aqODvW4ItCaHpbWbZdtMZUcLpJB-rAgIjqbDc49FpE7Nt6FAuY8Lk-WUcq_CGfY5i6OUchoqCKnGY4bL-DI1fnAJdSBd72zGBSJewmuZT3_SvByN7gt2WHd8wuaiAdRuNhQog-r54MUOrSWdb8QoqrwVLvhn9-ZrQH91fZmwHp1BQQD5MNYaUsgdbnN8vUZgoDuqpYJwMmgXal8o0yUti450nwlQrCjPPYZ_xf0aXwF8QFpAWr1lzqy6jqcTUgnjO6zzje0Ps0eG7zsPlUmna0zredfLILtVkUCNX2Y096kgsXL5LgFFjb-QiOken2aR1TBqX0qEvHNw"}')
JWT_PRIVATE_KEY = jwk.JWK.from_json('{"d":"Axki1VlhxGqYW9MfbgbMiyphQZmWSX65bAHuGgdfPDVsL8lgrWmtGnaSa_UgwEUWgInzHk989QNUJbHKSkuyAiF4cxFDyWY3M3sGndm_NKn4WaQGjOu_-c72CUiv1FEGmte6tWgozoUQy0o8EUAWu5a2dEUhcsbVPdbcZ85bEnd5hzDL5LrVyz4AUdR8CPlHsji8QYaBIygSVlAqlUljiQAVH3mwxoXu2VHM9r7m6viKlC1wlo5bnVlMDxiVeuNLKcwmxFU7QTHmt-rMB58xx_ylECGRoGRqmo2if9ZoffFL2EtZxGFQQUls3O-cMehqMUG57HDiII9p0M8p0t9F4Q","dp":"yRS_3KKXh2KC7MkJC8zrNvhdO1eBAv0iBFBH_gf9hl5mdS4WcW-f6ZXgvdz5IK2X27kQWyHiQGb6wRWknYlXYlYFO2p9UgxX_SigOCOqRlcBnfQPPs2Ki6QnveEpg1a0DoPi55VZo3muAJYqHzgzis3sz9A2wPOWDMioZUEliOk","dq":"81Vc0mFxCWpWiKPDkm7NxylFjk0WcDdrvTdfxU6ZeZs6KblU5pmEXTOFmhPvrBPZ6x-G4l0mzxfU3wJQMt6R8Us4ox_W05T-l7l8iWQHqVzR6-FdG08HjYKGh5ycgXQBR6pekio_37LEYGoloDJkBJLuF5NCFU2i2fPW5ytXa5E","e":"AQAB","kty":"RSA","n":"95VccdRen5aqODvW4ItCaHpbWbZdtMZUcLpJB-rAgIjqbDc49FpE7Nt6FAuY8Lk-WUcq_CGfY5i6OUchoqCKnGY4bL-DI1fnAJdSBd72zGBSJewmuZT3_SvByN7gt2WHd8wuaiAdRuNhQog-r54MUOrSWdb8QoqrwVLvhn9-ZrQH91fZmwHp1BQQD5MNYaUsgdbnN8vUZgoDuqpYJwMmgXal8o0yUti450nwlQrCjPPYZ_xf0aXwF8QFpAWr1lzqy6jqcTUgnjO6zzje0Ps0eG7zsPlUmna0zredfLILtVkUCNX2Y096kgsXL5LgFFjb-QiOken2aR1TBqX0qEvHNw","p":"_Zp6xl9HcZ1nHiZgYsutBIfBWnQ1Lc6kPIxJxVDKzjjvP3SyYDv91ptLWrH6qvZn5XDgRj43787KQx7UF1JgGrVfFpnyTph0jGNiRv_9__eGtvBH0pTnoSsnKm5t3PbBQyNM49dpaUQNSwBtWuo9EFftEjaeKmsyCQTafUI0vkc","q":"-exRYLnIvAfY4x52uR0sAdd5UwnUCsJxsaBmDSDv-yPrE84aAV2hm_LupYg7y2Sh3vihSfX7mIilzVuLyTEGiwDk9vaC8MH-4zbji-2IeQ0ar7rF-j9UFMIdj46XCwPRfewiN1xJnpeEOCVJlcFHFYEEBJx1IsVJD3X91mu_d5E","qi":"7A13rYFToQuGvMmLboQy5Qw9wWE1M5GJA6veizHeQpPGsqXlc52u3eX86Qfvly7wfXjH95AIrtmvvgAQEIojOv8MqTuuq99hw9FLo-LnqGKAp2oIsbR-pwBlE1DD6I-6XwQXTeQ9GEKZcgdEi9bvnMYTb27zt1AJrfRaOdyw73M"}')

AUTH_JWT_CONFIG = {
    "JWT_PUBLIC_KEY": JWT_PUBLIC_KEY,
    "JWT_PRIVATE_KEY": JWT_PRIVATE_KEY,
    "DEFAULT_CREDENTIAL": os.environ.get("DEFAULT_CREDENTIAL","1234567890"),
    "DUMMY_OTP": os.environ.get("DUMMY_OTP","000000"),
    "DEFAULT_OTP": os.environ.get("DEFAULT_OTP","000000"),
    "LIFE_TIME_OF_ACCESS_TOKEN": timedelta(minutes=1500),
    "LIFE_TIME_OF_REFRESH_TOKEN": timedelta(days=7),
    "LOGIN_RATE_LIMITER_DURATION": timedelta(seconds=30),
    "FORGOT_PASSWORD_LIMITER_DURATION": timedelta(seconds=30),
    "FORGOT_PASSWORD_JWT_EXPIRATION": timedelta(minutes=10),
    "OTP_EXPIRATION_TIME": timedelta(minutes=7).seconds,
    "FORGOT_PASSWORD_RATE_LIMIT": 5,
    "LOGIN_RATE_LIMIT" : 20,
    "SALTING_CONSTANT": "vellego_is_great",
    "iss": "vellego.com",
    "FORGOT_PASSWORD_SUB" : "reset_password",
    "ALGORITHM_OF_JWT": 'RS256',
    "ACCESS_TOKEN_EXTRA_CONFIGS": {
        "sub": "access_token",
        
    },
    "REFRESH_TOKEN_EXTRA_CONFIGS": {
        "sub": "refresh_token"
    },
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated', 
    )
}